//TODO: change project structure so that these 2 blocks are in a top-level build file and include
// a sample use module
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}
allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
    }
}

apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.WaylonBrown'

android {
    compileSdkVersion 27
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:27.0.0'
    testCompile 'junit:junit:4.12'

    compile "android.arch.lifecycle:extensions:1.0.0-rc1"

    compile 'io.reactivex.rxjava2:rxjava:2.0.2'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

/**
 * Build a JAR with JavaDocs
 */
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/**
 * Build a JAR with source files
 */

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
    include("**/*.java")
}

artifacts {
    archives sourcesJar
    archives javadocJar
}